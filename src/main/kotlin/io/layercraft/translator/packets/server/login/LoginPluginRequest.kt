package io.layercraft.translator.packets.server.login

import io.layercraft.translator.packets.ServerPacket
import io.layercraft.translator.serialization.processing.MinecraftArray
import io.layercraft.translator.serialization.processing.MinecraftArraySizeType
import io.layercraft.translator.serialization.processing.MinecraftString
import io.layercraft.translator.utils.MINECRAFT_MAX_IDENTIFIER_LENGTH

/**
 * Login plugin request | client-bound | Packet ID 0x04 | State: Login | Answer with [LoginPluginResponsePacket] //TODO
 *
 * @property messageId Generated by the server - should be unique to the connection.
 * @property channel Name of the plugin channel used to send the data.
 * @property data Any data, depending on the channel. The length of this array must be inferred from the packet length.
 * @see <a href="http://wiki.vg/Protocol#Login_Plugin_Request">https://wiki.vg/Protocol#Login_Plugin_Request</a>
 */
data class LoginPluginRequest(
    val messageId: Int,
    @MinecraftString(MINECRAFT_MAX_IDENTIFIER_LENGTH)
    val channel: String,
    @MinecraftArray(MinecraftArraySizeType.READ_AVAILABLE)
    val data: ByteArray
): ServerPacket
